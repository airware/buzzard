# Python CircleCI 2.0 configuration file
#
# Source: https://circleci.com/docs/2.0/language-python/ for more details
#
---
version: 2

variables:
  base_docker_image: &base_docker_image circleci/python:3.7
  working_directory: &working_directory /tmp/circleci/buzzard
  workspace_directory: &workspace_directory /tmp/circleci/

references:
  base_container_config: &base_container_config
    working_directory: *working_directory
    docker:
      - image: *base_docker_image

  py27_container_config: &py27_container_config
    working_directory: *working_directory
    docker:
      - image: $AWS_ECR_IMAGE_TAG_27
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY

  py34_container_config: &py34_container_config
    working_directory: *working_directory
    docker:
      - image: $AWS_ECR_IMAGE_TAG_34
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY

  py36_container_config: &py36_container_config
    working_directory: *working_directory
    docker:
      - image: $AWS_ECR_IMAGE_TAG_36
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY

  py37_container_config: &py37_container_config
    working_directory: *working_directory
    docker:
      - image: $AWS_ECR_IMAGE_TAG_37
        aws_auth:
          aws_access_key_id: $AWS_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_SECRET_ACCESS_KEY


  repo_cache_key: &repo_cache_key
    repo-v2-{{ .Branch }}-{{ .Revision }}

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - *repo_cache_key
        - repo-v2-{{ .Branch }}
        - repo-v2-

  py27_requirements_cache_key: &py27_requirements_cache_key
    py27-dependencies-v7-{{ checksum "requirements-ci.txt" }}-{{ checksum "setup.py" }}

  py27_requirements_backup_cache_key: &py27_requirements_backup_cache_key
    py27-dependencies-v7-

  py27_restore_dependencies: &py27_restore_dependencies
    restore_cache:
      keys:
        - *py27_requirements_cache_key
        - *py27_requirements_backup_cache_key

  py34_requirements_cache_key: &py34_requirements_cache_key
    py34-dependencies-v7-{{ checksum "requirements-ci.txt" }}-{{ checksum "setup.py" }}

  py34_requirements_backup_cache_key: &py34_requirements_backup_cache_key
    py34-dependencies-v7-

  py34_restore_dependencies: &py34_restore_dependencies
    restore_cache:
      keys:
        - *py34_requirements_cache_key
        - *py34_requirements_backup_cache_key

  py36_requirements_cache_key: &py36_requirements_cache_key
    py36-dependencies-v7-{{ checksum "requirements-ci.txt" }}-{{ checksum "setup.py" }}

  py36_requirements_backup_cache_key: &py36_requirements_backup_cache_key
    py36-dependencies-v7-

  py36_restore_dependencies: &py36_restore_dependencies
    restore_cache:
      keys:
        - *py36_requirements_cache_key
        - *py36_requirements_backup_cache_key

  py37_requirements_cache_key: &py37_requirements_cache_key
    py37-dependencies-v7-{{ checksum "requirements-ci.txt" }}-{{ checksum "setup.py" }}

  py37_requirements_backup_cache_key: &py37_requirements_backup_cache_key
    py37-dependencies-v7-

  py37_restore_dependencies: &py37_restore_dependencies
    restore_cache:
      keys:
        - *py37_requirements_cache_key
        - *py37_requirements_backup_cache_key

jobs:
  init:
    <<: *base_container_config
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: *repo_cache_key
          paths:
            - .

  lint:
    <<: *base_container_config
    steps:
      - *restore_repo
      - run:
          name: install lint dependencies
          command: |
            mkdir -p venvs/lint
            python -m venv ./venvs/lint
            . venvs/lint/bin/activate
            pip install -r requirements-lint.txt
      - run:
          name: run linter
          command: |
            mkdir -p test-reports
            . venvs/lint/bin/activate
            python --version
            pylint buzzard --output-format=json > test-reports/pylint.json || true
      - store_artifacts:
          path: test-reports
          destination: test-reports

  py27_test:
    <<: *py27_container_config
    parallelism: 4
    steps:
      - *restore_repo
      - *py27_restore_dependencies
      - run:
          name: install python27 dependencies
          # cp -s is a temporary bug fix for virtualenv not able to copy _gdal_array.so
          command: |
            mkdir -p venvs/27
            virtualenv venvs/27
            . venvs/27/bin/activate
            pip install -r requirements-ci.txt
            if [ ! -f venvs/27/lib/python2.7/site-packages/osgeo/_gdal_array.so ]; then cp /usr/local/gdal/lib/python2.7/site-packages/osgeo/_gdal_array.so venvs/27/lib/python2.7/site-packages/osgeo; fi
      # run tests!
      - run:
          name: run tests
          # -x option of pytest will stop tests after the first error
          # no coveralls for py27
          command: |
            . venvs/27/bin/activate
            circleci tests glob **/test/*.py | circleci tests split --split-by=timings --timings-type=filename | xargs python -m pytest -x --junitxml=test-reports/pytest-report.xml
      - store_artifacts:
          path: test-reports
          destination: test-reports
      - store_test_results:
          path: test-reports
      - save_cache:
          key: *py27_requirements_cache_key
          paths:
            - ./venvs/27

  py34_test:
    <<: *py34_container_config
    parallelism: 1
    steps:
      - *restore_repo
      - *py34_restore_dependencies
      - run:
          name: install python34 dependencies
          command: |
            mkdir -p venvs/34
            python -m venv ./venvs/34
            . venvs/34/bin/activate
            pip install -r requirements-ci.txt
      # run tests!
      - run:
          name: run tests
          command: |
            . venvs/34/bin/activate
            python scripts/pytest_parallel.py -x --junitxml=test-reports/pytest-report.xml
      - store_artifacts:
          path: test-reports
          destination: test-reports
      - store_test_results:
          path: test-reports
      - save_cache:
          key: *py34_requirements_cache_key
          paths:
            - ./venvs/34

  py36_test:
    <<: *py36_container_config
    parallelism: 1
    steps:
      - *restore_repo
      - *py36_restore_dependencies
      - run:
          name: install python36 dependencies
          command: |
            mkdir -p venvs/36
            python -m venv ./venvs/36
            . venvs/36/bin/activate
            pip install -r requirements-ci.txt
      # run tests!
      - run:
          name: run tests
          command: |
            . venvs/36/bin/activate
            python scripts/pytest_parallel.py -x --junitxml=test-reports/pytest-report.xml
      - store_artifacts:
          path: test-reports
          destination: test-reports
      - store_test_results:
          path: test-reports
      - save_cache:
          key: *py36_requirements_cache_key
          paths:
            - ./venvs/36

  py37_test:
    <<: *py37_container_config
    parallelism: 1
    steps:
      - *restore_repo
      - *py37_restore_dependencies
      - run:
          name: install python37 dependencies
          command: |
            mkdir -p venvs/37
            python -m venv ./venvs/37
            . venvs/37/bin/activate
            # Workaround from https://github.com/PyWavelets/pywt/issues/375
            pip install Cython
            pip install numpy>=1.13

            pip install -r requirements-ci.txt
      # run tests!
      - run:
          name: run tests
          command: |
            . venvs/37/bin/activate
            python scripts/pytest_parallel.py -x --cov=buzzard --cov-report=term --cov-report=xml:test-reports/coverage.xml --junitxml=test-reports/pytest-report.xml
            ls -l test-reports
            # codecov first concatenate the coverage*.xml files and upload it
            # it does not seem to care about the pytest-report*.xml, is it a problem?
            # https://circleci.com/gh/airware/buzzard/1564#queue-placeholder/containers/0
            # It used to upload those.
            # https://circleci.com/gh/airware/buzzard/1506#artifacts/containers/0
            codecov

      - store_artifacts:
          # We now store the coverage*.xml files, is it a problem?
          path: test-reports
          destination: test-reports
      - store_test_results:
          path: test-reports
      - save_cache:
          key: *py37_requirements_cache_key
          paths:
            - ./venvs/37

  end:
    <<: *base_container_config
    steps:
      - run:
          name: "Buzzard End task"
          command: |
            echo "Workflow finished"

workflows:
  version: 2
  buzzard:
    jobs:
      - init
      - lint:
          requires:
            - init
      - py27_test:
          requires:
            - init
          filters:
            branches:
              only: /^v0\.4\..*/
      # - py34_test:
      #     requires:
      #       - init
      - py36_test:
          requires:
            - init
      - py37_test:
          requires:
            - init
      - end:
          requires:
            - lint
            # - py34_test
            - py36_test
            - py37_test
